# -*- coding: utf-8 -*-
"""
/***************************************************************************
 DialogBADASSDialog
                                 A QGIS plugin
 Extention permettant l'accès à l'interface BADASS
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2021-04-12
        git sha              : $Format:%H$
        copyright            : (C) 2021 by Alexandre Humeau
        email                : alexandre.humeau1@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from PyQt5.QtWidgets import *
from PyQt5 import QtCore
from PyQt5.QtCore import *
from PyQt5 import QtGui
from PyQt5.QtGui import *

from .expression import *
# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'form4_entitearcheo1.ui'))


class DialogBADASSForm4Entitearcheo1(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self,donnees=None, parent=None):
        """Constructor."""
        super(DialogBADASSForm4Entitearcheo1, self).__init__(parent)
        #
        self.donnees= donnees
        self.setupUi(self)
        #Les éléments du tableau ne sont pas clairement définis
        #Le model choisie pour l'instant est le plus adapté à un QTableView
        self.model = QStandardItemModel(5, 3)
        self.tableView_archeo.setModel(self.model)
        #Les données sont bidons, elles permettent d'avoir un aperçu d'un tableau rempli
        for i in range(5):
                for j in range(3):
                    item = QStandardItem(str(i+j))
                    self.model.setItem(i,j,item)
        #Quelques méthodes utiles pour cacher les en-têtes et changer leur contenue
        #self.tableView_archeo.horizontalHeader().setVisible(False)
        #self.ui.tblContents.verticalHeader().setVisible(False)
        #self.model.setHorizontalHeaderLabels(['2','1','2'])
        
        #fenetre expression
        self.rechercher.clicked.connect(lambda: expression_dialog(self,iface))
